Installing the Sakila DB using the command line
It’s important to get familiar with loading data into MySQL using the command line, mysql utility. This is a bit advanced, but worth getting setup: it’s how most people work with MySQL in the real world.

First, run this command from your terminal (Terminal, Git Bash, etc.):

mysql
If that yields a "command not found" error, you may have to tell your terminal where to find the mysql program. Some of you may have encountered a special variable your terminal uses to look for installed programs, called the PATH. Before you can run the mysql command, you’ll need to add a directory to your PATH (again, this tells your terminal where to find the mysql command). For Windows, see this.

If you’re on a Mac, run these two commands:

echo 'export PATH="$PATH:/usr/local/mysql/bin"' >> ~/.bash_profile
source ~/.bash_profile
Once resolved, you should see another error when running the `mysql command:

access denied error

Reading this error tells us what’s wrong: we’re not using a password to connect. By default, mysql is also trying to use my username (dylan), but you might remember that we’re connecting to MySQL using the "root" user, instead.

Run this command:

mysql -u root -p
and enter your root user password that you generated as part of class. After you enter the password, you should see a prompt like this:

mysql prompt

The next commands we run assume that you’re in the sakila-db directory you unzipped earlier. If you’re not there, exit mysql by running the command:

exit
cd into the sakila-db directory, and run

mysql -u root -p
Once you’re in the sakila-db directory and have mysql running, run the following two commands:

SOURCE sakila-schema.sql;
SOURCE sakila-data.sql;
SOURCE executes all the statements in a given SQL file, as SQL commands. sakila-schema.sql contains a number of CREATE TABLE statements to create the tables within our sample DB. sakila-data.sql contains the actual data that gets loaded into these tables.

Finally, open MySQL Workbench, refresh your list of databases under the SCHEMAS header, and you should see the sakila DB: